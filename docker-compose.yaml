version: '3'

services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - spark-minio-network

  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10 &&
      /usr/bin/mc alias set myminio http://minio:9000 minio minio123 &&
      /usr/bin/mc mb myminio/tpch || true &&
      /usr/bin/mc mb myminio/iceberg || true &&
      /usr/bin/mc mb myminio/warehouse || true
      "
    networks:
      - spark-minio-network

  spark-master:
    build:
      context: ./spark
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    volumes:
      - ./config/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./spark/apps:/opt/spark-apps
    networks:
      - spark-minio-network

  spark-worker:
    build:
      context: ./spark
      dockerfile: Dockerfile
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    volumes:
      - ./config/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./spark/apps:/opt/spark-apps
    networks:
      - spark-minio-network
    deploy:
      replicas: 2  # You can adjust the number of workers

  tpch-generator:
    build:
      context: ./data-generator
      dockerfile: Dockerfile
    depends_on:
      - minio
      - minio-setup
    volumes:
      - ./data-generator:/data
    networks:
      - spark-minio-network

networks:
  spark-minio-network:
    driver: bridge

volumes:
  minio_data: